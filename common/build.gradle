//file:noinspection GradlePackageUpdate
architectury {
    common("fabric", "forge")
}

loom {
    accessWidenerPath = file("src/main/resources/advanced-debug.accesswidener")
}

repositories {
    maven { url = "https://cursemaven.com" }
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${architectury_version}"

    modApi "com.github.Ultreon.ultreonlib:ultreonlib:$ultreonlib_version"

    modCompileOnly 'com.electronwill.night-config:core:3.6.3'
    modCompileOnly 'com.electronwill.night-config:toml:3.6.3'

    // ImGui
    api "io.github.spair:imgui-java-binding:$imgui_version"
    api "io.github.spair:imgui-java-lwjgl3:$imgui_version"
    api "io.github.spair:imgui-java-natives-linux:$imgui_version"
    api "io.github.spair:imgui-java-natives-macos:$imgui_version"
    api "io.github.spair:imgui-java-natives-windows:$imgui_version"

    api "io.github.ultreon:ubo:$ultreon_data_version"

    api "io.github.ultreon.corelibs:collections-v0:$corelibs_version"
    api "io.github.ultreon.corelibs:commons-v0:$corelibs_version"
    api "io.github.ultreon.corelibs:crash-v0:$corelibs_version"
    api "io.github.ultreon.corelibs:datetime-v0:$corelibs_version"
    api "io.github.ultreon.corelibs:events-v1:$corelibs_version"
    api "io.github.ultreon.corelibs:functions-v0:$corelibs_version"
    api "io.github.ultreon.corelibs:registries-v0:$corelibs_version"
    api "io.github.ultreon.corelibs:resources-v0:$corelibs_version"
    api "io.github.ultreon.corelibs:text-v0:$corelibs_version"
    api "io.github.ultreon.corelibs:translations-v0:$corelibs_version"
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    "src/main/generated/resources"
            ]
            System.out.println(srcDirs)
        }
    }
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        mavenLocal()
    }
}
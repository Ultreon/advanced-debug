//file:noinspection GroovyAssignabilityCheck
import org.jetbrains.kotlin.gradle.dsl.JvmTarget

//file:noinspection GradlePackageUpdate
architectury {
    common()
}

loom {
    accessWidenerPath = file("src/main/resources/advanced-debug.accesswidener")
}

kotlin {
    jvmToolchain 17
}

compileKotlin {
    compilerOptions {
        jvmTarget = JvmTarget.JVM_17
    }
}

classes {
    finalizedBy("copyKotlinClasses")
}

tasks.register("copyKotlinClasses") {
    doLast {
        copy {
            from fileTree("$projectDir/build/classes/kotlin/main")
            into file("$projectDir/build/classes/java/main")
        }
    }
}

jar.mustRunAfter("copyKotlinClasses")

jar {
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

compileKotlin {
    outputs.dir("$projectDir/build/classes/java/main")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    // Kotlin Libraries
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core-jvm:1.4.1"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json-jvm:1.4.1"

    modImplementation "fuzs.forgeconfigapiport:forgeconfigapiport-common:$forge_config_api_port_version"
    modCompileOnly 'com.electronwill.night-config:core:3.6.3'
    modCompileOnly 'com.electronwill.night-config:toml:3.6.3'

}

sourceSets {
    main {
        resources {
            srcDirs += [
                    "src/main/generated/resources"
            ]
            System.out.println(srcDirs)
        }
    }
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
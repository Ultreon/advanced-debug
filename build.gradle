//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.5-SNAPSHOT" apply false
}
repositories {
    gradlePluginPortal()
}

architectury {
    minecraft = rootProject.minecraft_version
}

@SuppressWarnings('unused')
Object getModDescription() {
    return "${mod_description}"
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "maven-publish"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-1.19.2:2022.08.10@zip")
        }

        compileOnly 'com.google.errorprone:error_prone_annotations:2.16'
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/Ultreon/advanced-debug")
                credentials {
                    username = project.findProperty("gpr.user") == null ? System.getenv("USERNAME") : project.findProperty("gpr.user")
                    password = project.findProperty("gpr.key") == null ? System.getenv("TOKEN") : project.findProperty("gpr.key")
                }
            }
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    if (snapshot == "true") {
        version = mod_version + "+snapshot." + new Date().format("yyyy.MM.dd.HH.mm")
    } else {
        version = mod_version
    }
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
        maven { url "https://maven.parchmentmc.org" }
        maven { url "https://jitpack.io" }
        maven { url "https://cursemaven.com" }
        maven { url "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Ultreon/ultreonlib")
            credentials {
                username = project.findProperty("gpr.user") == null ? System.getenv("USERNAME") : project.findProperty("gpr.user")
                password = project.findProperty("gpr.key") == null ? System.getenv("TOKEN") : project.findProperty("gpr.key")
            }
        }
        maven {
            name "Fuzs Mod Resources"
            url "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
        }

        flatDir {
            dir "${rootProject.projectDir}/libs"
        }
    }

    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding = "UTF-8"
            options.release = 17
        }
    }

    java {
        withSourcesJar()
    }
}
